50. Repo: aedorado/Amazon-Updates
	File: DB.py
	URL: https://github.com/aedorado/Amazon-Updates/blob/a58ce878f4422f03c581b574090ef6f1e0032817/DB.py
	Vulnerable Pattern: execute(
	Attack Description: Direct execution of SQL queries with string concatenation can lead to SQL injection.
	Vulnerable Code Snippet:
        self.cursor = self.conn.cursor()
        pass

    def all(self, table=''):
        q = 'SELECT * FROM ' + table
        self.cursor.execute(q)
        return self.cursor.fetchall()

    def query(self, q):
        self.cursor.execute(q)

Step-by-Step Attack Scenario:
			1. The vulnerable code is found in the following file:
        self.cursor = self.conn.cursor()
        pass

    def all(self, table=''):
        q = 'SELECT * FROM ' + table
        self.cursor.execute(q)
        return self.cursor.fetchall()

    def query(self, q):
        self.cursor.execute(q)

			2. An attacker could inject malicious SQL commands where the `execute(` pattern is used.
			3. For example, an attacker might craft a payload like:
Original intended input:
    user_id = "123"

    Malicious input that could expose all users:
    user_id = "123 OR 1=1"

    Resulting query:
    SELECT * FROM users WHERE id = 123 OR 1=1
    # This would return all users instead of just user 123
			4. When this malicious input is processed, the SQL query structure would be altered, potentially exposing or modifying sensitive data.
