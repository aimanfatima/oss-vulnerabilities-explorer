193. Repo: kevin-leptons/fx-doc
	File: env
	URL: https://github.com/kevin-leptons/fx-doc/blob/de13e753a0ee1eea511d51c1ee7540a58bbafb18/env
	Vulnerable Pattern: .format(
	Attack Description: Using .format() for SQL queries can be vulnerable to SQL injection if user input is not properly sanitized.
	Vulnerable Code Snippet:
venv_dirname = 'venv'
venv_dir = path.join(project_dir, venv_dirname)

def cli_help():
    print('USAGE')
    print(' {} COMMAND'.format(argv[0]))
    print('')
    print('COMMANDS')
    print(' init        Initialize venv')
    print(' install     Install both dev and req packages into venv')
    print(' clean       Clean venv files')
Step-by-Step Attack Scenario:
			1. The vulnerable code is found in the following file:
venv_dirname = 'venv'
venv_dir = path.join(project_dir, venv_dirname)

def cli_help():
    print('USAGE')
    print(' {} COMMAND'.format(argv[0]))
    print('')
    print('COMMANDS')
    print(' init        Initialize venv')
    print(' install     Install both dev and req packages into venv')
    print(' clean       Clean venv files')
			2. An attacker could inject malicious SQL commands where the `.format(` pattern is used.
			3. For example, an attacker might craft a payload like:
Original intended input:
    user_input = "valid_input"

    Malicious input example:
    user_input = "' OR '1'='1"

    Resulting query transformation:
    Original: SELECT * FROM table WHERE field = 'valid_input'
    Malicious: SELECT * FROM table WHERE field = '' OR '1'='1'
    # This would bypass authentication or return all records
			4. When this malicious input is processed, the SQL query structure would be altered, potentially exposing or modifying sensitive data.
