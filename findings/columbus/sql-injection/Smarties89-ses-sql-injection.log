126. Repo: Smarties89/ses
	File: ses
	URL: https://github.com/Smarties89/ses/blob/158e1f2d712c38534b76b8244ebba6613a190106/ses
	Vulnerable Pattern: .format(
	Attack Description: Using .format() for SQL queries can be vulnerable to SQL injection if user input is not properly sanitized.
	Vulnerable Code Snippet:
        response = urllib2.urlopen(req)
        if response.getcode() != 200:
            return None
        return response.read()
    except Exception as e:
        log.debug("'{}' not found. Exception {}".format(url, e))
        return None
    # TODO: Figure out what exactly urlopen can give of exceptions,
    # and print out better error messages.


Step-by-Step Attack Scenario:
			1. The vulnerable code is found in the following file:
        response = urllib2.urlopen(req)
        if response.getcode() != 200:
            return None
        return response.read()
    except Exception as e:
        log.debug("'{}' not found. Exception {}".format(url, e))
        return None
    # TODO: Figure out what exactly urlopen can give of exceptions,
    # and print out better error messages.


			2. An attacker could inject malicious SQL commands where the `.format(` pattern is used.
			3. For example, an attacker might craft a payload like:
Original intended input:
    user_input = "valid_input"

    Malicious input example:
    user_input = "' OR '1'='1"

    Resulting query transformation:
    Original: SELECT * FROM table WHERE field = 'valid_input'
    Malicious: SELECT * FROM table WHERE field = '' OR '1'='1'
    # This would bypass authentication or return all records
			4. When this malicious input is processed, the SQL query structure would be altered, potentially exposing or modifying sensitive data.
