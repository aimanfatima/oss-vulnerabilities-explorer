148. Repo: diouziou/bod
	File: bod
	URL: https://github.com/diouziou/bod/blob/7af5aa1ba42c0e4287ac65c747e0fb25f5987979/bod
	Vulnerable Pattern: .format(
	Attack Description: Using .format() for SQL queries can be vulnerable to SQL injection if user input is not properly sanitized.
	Vulnerable Code Snippet:
ESCRP = 'z=z=z'
ESCRS = 'z=z=z'

def check_support(target):
	if target not in SUPPORTED_TARGETS:
		print("{} is not a supported target".format(target))
		print("supported targets: {}".format(', '.join(SUPPORTED_TARGETS)))
		exit(0)

### -------------------------------------------------------------------- ###
class State():
Step-by-Step Attack Scenario:
			1. The vulnerable code is found in the following file:
ESCRP = 'z=z=z'
ESCRS = 'z=z=z'

def check_support(target):
	if target not in SUPPORTED_TARGETS:
		print("{} is not a supported target".format(target))
		print("supported targets: {}".format(', '.join(SUPPORTED_TARGETS)))
		exit(0)

### -------------------------------------------------------------------- ###
class State():
			2. An attacker could inject malicious SQL commands where the `.format(` pattern is used.
			3. For example, an attacker might craft a payload like:
Original intended input:
    user_input = "valid_input"

    Malicious input example:
    user_input = "' OR '1'='1"

    Resulting query transformation:
    Original: SELECT * FROM table WHERE field = 'valid_input'
    Malicious: SELECT * FROM table WHERE field = '' OR '1'='1'
    # This would bypass authentication or return all records
			4. When this malicious input is processed, the SQL query structure would be altered, potentially exposing or modifying sensitive data.
