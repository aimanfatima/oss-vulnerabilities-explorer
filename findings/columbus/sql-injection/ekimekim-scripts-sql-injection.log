182. Repo: ekimekim/scripts
	File: ac
	URL: https://github.com/ekimekim/scripts/blob/c7ae7159c40e4b07329975c563ba0e1506ab95d1/ac
	Vulnerable Pattern: .format(
	Attack Description: Using .format() for SQL queries can be vulnerable to SQL injection if user input is not properly sanitized.
	Vulnerable Code Snippet:
	# pick the new mode that should be in use
	new_modes = set(settings['mode'] for settings in new.values() if settings)
	if new_modes:
		mode = list(new_modes)[0]
		if len(new_modes) > 1:
			logging.warning("New modes are in conflict - picking {}".format(mode))
	else:
		# This can happen if the only new thing was to turn something off.
		# In the absence of a new mode to take priority, pick the most popular desired mode.
		# On a tie, pick arbitrarily.
		old_modes = Counter(settings['mode'] for settings in new_desired.values() if settings)
Step-by-Step Attack Scenario:
			1. The vulnerable code is found in the following file:
	# pick the new mode that should be in use
	new_modes = set(settings['mode'] for settings in new.values() if settings)
	if new_modes:
		mode = list(new_modes)[0]
		if len(new_modes) > 1:
			logging.warning("New modes are in conflict - picking {}".format(mode))
	else:
		# This can happen if the only new thing was to turn something off.
		# In the absence of a new mode to take priority, pick the most popular desired mode.
		# On a tie, pick arbitrarily.
		old_modes = Counter(settings['mode'] for settings in new_desired.values() if settings)
			2. An attacker could inject malicious SQL commands where the `.format(` pattern is used.
			3. For example, an attacker might craft a payload like:
Original intended input:
    user_input = "valid_input"

    Malicious input example:
    user_input = "' OR '1'='1"

    Resulting query transformation:
    Original: SELECT * FROM table WHERE field = 'valid_input'
    Malicious: SELECT * FROM table WHERE field = '' OR '1'='1'
    # This would bypass authentication or return all records
			4. When this malicious input is processed, the SQL query structure would be altered, potentially exposing or modifying sensitive data.
